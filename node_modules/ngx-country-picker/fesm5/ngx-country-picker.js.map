{"version":3,"file":"ngx-country-picker.js","sources":["ng://ngx-country-picker/country-picker.config.ts","ng://ngx-country-picker/country-picker.service.ts","ng://ngx-country-picker/country-picker.component.ts","ng://ngx-country-picker/country-picker.module.ts","ng://ngx-country-picker/ngx-country-picker.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const COUNTRY_PICKER_CONFIG = new InjectionToken<CountryPickerConfig>('countrypicker.config');\n\nexport interface CountryPickerConfig {\n  baseUrl: string;\n  filename: string;\n}\n\nexport const COUNTRY_PICKER_CONFIG_DEFAULT: CountryPickerConfig = {\n  baseUrl: 'assets/',\n  filename: 'countries.json',\n};\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { COUNTRY_PICKER_CONFIG, CountryPickerConfig } from './country-picker.config';\nimport { ICountry } from './country.interface';\n\n@Injectable()\nexport class CountryPickerService {\n\n  private readonly _baseUrl: string;\n  private readonly _filename: string;\n  private _data: Observable<ICountry[]> | null = null;\n\n  protected static handleError(error: HttpResponse<any> | any): Observable<any> {\n    let errMsg: string;\n    if (error instanceof HttpResponse) {\n      if (error.status === 404) {\n        errMsg = 'Error loading countries.json file.'\n          + ' Please configure WebPack and load countries.json assets to your root folder';\n      } else {\n        const body = error.body || '';\n        const err = body.error || JSON.stringify(body);\n        errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n      }\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return throwError(errMsg);\n  }\n\n  constructor(\n    @Inject(COUNTRY_PICKER_CONFIG) config: CountryPickerConfig,\n    private _http: HttpClient\n  ) {\n    this._baseUrl = config.baseUrl;\n    this._filename = config.filename;\n    this._data = this._loadData();\n  }\n\n  public getCountries(): Observable<ICountry[]> {\n    return this._data\n      .pipe(\n        map((countries: ICountry[]) =>\n          countries.map((country: ICountry) => {\n            country.name.native[0] = country.name.native[Object.keys(country.name.native)[0]];\n            return country;\n          })\n        )\n      );\n  }\n\n  public getBaseUrl(): string {\n    return this._baseUrl;\n  }\n\n  private _loadData(): Observable<ICountry[]> {\n    return this._http.get<ICountry[]>(this._baseUrl + this._filename)\n      .pipe(\n        catchError(CountryPickerService.handleError)\n      );\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { ICountry } from './country.interface';\nimport { CountryPickerService } from './country-picker.service';\n\n@Component({\n  selector: 'country-picker',\n  template: `\n      <select [class]=\"classes\">\n          <option *ngFor=\"let c of countries\" [value]=\"getValue(c)\">\n              <img *ngIf=\"flag\" [src]=\"baseUrl + c.cca3.toLowerCase() + '.svg'\">{{ getName(c) }}\n          </option>\n      </select>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountryPickerComponent implements OnInit {\n\n  @Input() public flag = false;\n  @Input() public setValue = 'cca3';\n  @Input() public setName = 'name.common';\n  @Input() public classes = ['form-control', 'form-control-sm'];\n\n  public countries: ICountry[] = [];\n  public baseUrl: string;\n\n  constructor(\n    private _countryPickerService: CountryPickerService,\n    private _cdr: ChangeDetectorRef,\n  ) {\n    this.baseUrl = _countryPickerService.getBaseUrl() + 'data/';\n  }\n\n  public ngOnInit(): void {\n    this._countryPickerService.getCountries()\n      .subscribe(countries => {\n        this.countries = countries.sort((a: ICountry, b: ICountry) => {\n          let na = this.getName(a);\n          let nb = this.getName(b);\n          if (na > nb) {\n            return 1;\n          }\n          if (na < nb) {\n            return -1;\n          }\n          return 0;\n        });\n        this._cdr.markForCheck();\n      });\n  }\n\n  public getValue(obj: ICountry): string {\n    return this.setValue.split('.').reduce((o, i) => o[i], obj);\n  }\n\n  public getName(obj: ICountry): string {\n    return this.setName.split('.').reduce((o, i) => o[i], obj);\n  }\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { COUNTRY_PICKER_CONFIG, COUNTRY_PICKER_CONFIG_DEFAULT, CountryPickerConfig } from './country-picker.config';\nimport { CountryPickerService } from './country-picker.service';\nimport { CountryPickerComponent } from './country-picker.component';\n\nexport function countryPickerServiceFactory(config: CountryPickerConfig, http: HttpClient) {\n  return new CountryPickerService(config, http);\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [\n    CountryPickerComponent\n  ],\n  exports: [\n    CountryPickerComponent\n  ]\n})\nexport class CountryPickerModule {\n\n  public static forRoot(providedConfig: CountryPickerConfig = COUNTRY_PICKER_CONFIG_DEFAULT): ModuleWithProviders<CountryPickerModule> {\n    return {\n      ngModule: CountryPickerModule,\n      providers: [\n        {provide: COUNTRY_PICKER_CONFIG, useValue: providedConfig},\n        {\n          provide: CountryPickerService,\n          useFactory: countryPickerServiceFactory,\n          deps: [COUNTRY_PICKER_CONFIG, HttpClient]\n        }\n      ]\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: CountryPickerModule) {\n    if (parentModule) {\n      throw new Error('CountryPickerModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {countryPickerServiceFactory as Éµa} from './country-picker.module';"],"names":["tslib_1.__param","tslib_1.__decorate"],"mappings":"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"}